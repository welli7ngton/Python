1 - Crie uma função chamada multiply_by que recebe um número x e retorna uma função interna que multiplica qualquer número dado por x. Teste a função retornada para multiplicar um número qualquer.

2 - Escreva uma função chamada counter que retorna uma função interna. A função interna deve manter uma contagem interna que é incrementada toda vez que é chamada e retorna o valor da contagem atual. Teste a função retornada para ver se ela conta corretamente.

3 - Crie uma função chamada calculate_power que recebe um número x e retorna uma função interna. A função interna deve receber um número n e retornar x elevado a n. Teste a função retornada para calcular potências.

4 - Escreva uma função chamada make_multiplier_of que recebe um número x e retorna uma função interna. A função interna deve receber um número n e retornar o resultado da multiplicação entre x e n. Teste a função retornada para multiplicar diferentes números por um valor fixo.

5 - Crie uma função chamada make_adder que recebe um número x e retorna uma função interna. A função interna deve receber um número n e retornar a soma de x e n. Teste a função retornada para somar diferentes números a um valor fixo.

6 - Escreva uma função chamada make_multiplier_sequence que recebe uma lista de números como argumento e retorna uma função interna. A função interna deve iterar pela lista e multiplicar cada elemento pelo número fornecido. Teste a função retornada para multiplicar todos os números da lista por um valor específico.

7 - Crie uma função chamada make_concatenator que recebe uma string inicial e retorna uma função interna. A função interna deve receber uma nova string e concatená-la à string inicial. Teste a função retornada para criar uma sequência de strings concatenadas.

8 - Crie uma função chamada make_cache que retorna uma função interna. A função interna deve armazenar em cache os resultados de chamadas anteriores e retornar o resultado armazenado se a mesma entrada for fornecida novamente. Teste a função retornada para evitar cálculos repetidos.

Escreva uma função chamada make_timer que retorna uma função interna. A função interna deve calcular o tempo decorrido desde a primeira chamada e retornar o resultado. Teste a função retornada para medir o tempo de execução de diferentes partes do seu código.

Crie uma função chamada make_password_checker que recebe uma senha como argumento e retorna uma função interna. A função interna deve receber uma senha fornecida pelo usuário e verificar se ela corresponde à senha original. Teste a função retornada para verificar se as senhas estão corretas.

Escreva uma função chamada make_average_counter que retorna uma função interna. A função interna deve receber um número como argumento e calcular a média dos números fornecidos até o momento, além de contar quantos números foram fornecidos. Teste a função retornada para calcular a média e contar os números corretamente.

Crie uma função chamada make_exponentiator que recebe um número x como argumento e retorna uma função interna. A função interna deve receber um número n e retornar x elevado à potência n. Teste a função retornada para calcular diferentes potências.

Escreva uma função chamada make_repeater que recebe uma string como argumento e retorna uma função interna. A função interna deve receber um número n e repetir a string fornecida n vezes, separadas por espaços. Teste a função retornada para repetir uma string um determinado número de vezes.

Crie uma função chamada make_calculator que retorna uma função interna. A função interna deve receber dois números e um operador (como uma string) e retornar o resultado da operação matemática. Teste a função retornada para realizar diferentes operações matemáticas.

Escreva uma função chamada make_logger que recebe um prefixo de log como argumento e retorna uma função interna. A função interna deve receber uma mensagem como argumento e imprimir a mensagem junto com o prefixo de log. Teste a função retornada para registrar diferentes mensagens com o prefixo correto.

Crie uma função chamada make_sequence_generator que recebe uma lista como argumento e retorna uma função interna. A função interna deve iterar pela lista e retornar o próximo elemento da sequência a cada chamada. Teste a função retornada para gerar diferentes sequências a partir da lista.

Escreva uma função chamada make_counter que retorna uma função interna. A função interna deve manter uma contagem interna que é incrementada toda vez que é chamada e retornar o valor da contagem atual. Teste a função retornada para ver se ela conta corretamente.

Crie uma função chamada make_string_formatter que recebe um formato de string como argumento e retorna uma função interna. A função interna deve receber os valores a serem formatados e retornar a string formatada. Teste a função retornada para formatar diferentes strings com os valores corretos.

Escreva uma função chamada make_multiplier_sequence que recebe uma lista de números como argumento e retorna uma função interna. A função interna deve multiplicar cada elemento da lista pelo número fornecido e retornar a lista resultante. Teste a função retornada para gerar sequências multiplicadas.

Crie uma função chamada make_positive_filter que retorna uma função interna. A função interna deve receber uma lista e filtrar apenas os números positivos. Teste a função retornada para filtrar listas com diferentes números.

Escreva uma função chamada make_name_generator que recebe um nome como argumento e retorna uma função interna. A função interna deve receber um sobrenome e retornar o nome completo concatenado. Teste a função retornada para gerar diferentes nomes completos.

Crie uma função chamada make_average_calculator que retorna uma função interna. A função interna deve receber uma lista de números e calcular a média deles. Teste a função retornada para calcular a média de diferentes listas de números.

Escreva uma função chamada make_password_validator que recebe uma senha como argumento e retorna uma função interna. A função interna deve receber uma senha fornecida pelo usuário e retornar se ela corresponde ou não à senha original. Teste a função retornada para validar diferentes senhas.